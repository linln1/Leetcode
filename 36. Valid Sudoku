class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        if(board.empty()||board[0].empty())
            return false;   
        int n = board.size();
        int m = board[0].size();
        
        vector<vector<bool>> RowFlag(n, vector<bool>(m,false));
        vector<vector<bool>> ColFlag(n, vector<bool>(m,false));
        vector<vector<bool>> SquFalg(n, vector<bool>(m,false));
        
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
             if(board[i][j]>='1'&&board[i][j]<='9'){
                 int c = board[i][j]-'1';
                 if(RowFlag[i][c]||ColFlag[c][j]||SquFalg[3*(i/3)+j/3][c])
                     return false;
                RowFlag[i][c]=true;
                ColFlag[c][j]=true;
                SquFalg[3*(i/3)+j/3][c]=true;
                
            }
        return true;
    }
};
