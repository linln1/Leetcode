class Solution {
public:
    vector< vector<int> > threeSum(vector<int>& nums) {
        int n = nums.size();
        vector< vector<int> > res;
        if (n < 3)
            return res;
        sort(nums.begin(), nums.end());
        for(int i = 0; i < n - 2; i++)
        {
            if(i == 0 ||  (i > 0 && nums[i] != nums[i - 1]))
            {
                int left = i + 1, right = n - 1;
                int sum = 0 - nums[i];
                while(left < right)
                {
                    if(nums[left] + nums[right] == sum)
                    {
                        vector<int> vi;
                        vi.push_back(nums[i]);
                        vi.push_back(nums[left]);
                        vi.push_back(nums[right]);
                        res.push_back(vi);
                        while(left < right && nums[left] == nums[left + 1])
                            left++;
                        while(left < right && nums[right] == nums[right - 1])
                            right--;
                        left++;
                        right--;
                    }
                    else if(nums[left] + nums[right] < sum)
                        left++;
                    else
                        right--;
                }
            }
        }
        return res;
    }
};
